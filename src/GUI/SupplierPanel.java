/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.SupplierDAO;
import DTO.SupplierDTO;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ray Khum
 */
public class SupplierPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierPanel
     */
    boolean saveForUpdate = true;

    public SupplierPanel() {
        initComponents();
        loadSupplier();
        jCheckBox1.setSelected(true);
        ennableFalse();
    }

    public void ennableFalse() {
        txtcode.setEnabled(false);
        txtName.setEnabled(false);
        txtAddress.setEnabled(false);
        jCheckBox1.setEnabled(false);
    }

    public static void loadSupplier() {
        Vector header = SupplierDAO.getColumNames();
        Vector data = new Vector();
        Vector<SupplierDTO> list = SupplierDAO.getSupplier();
        for (SupplierDTO supplier : list) {
            Vector row = new Vector();
            row.add(supplier.getCode());
            row.add(supplier.getName());
            row.add(supplier.getAddress());
            data.add(row);
        }
        //lay model dang chua trong contril table
        DefaultTableModel model = (DefaultTableModel) tblSupplier.getModel();
        model.setDataVector(data, header);
    }

    boolean checkitem(String supCod) {
        ArrayList<String> list = SupplierDAO.checkSupCod();
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).equals(supCod)) {
                return true;
            }
        }
        return false;
    }

    boolean checkCode() {
        Vector<SupplierDTO> sup = DAO.SupplierDAO.getSupplier();
        for (SupplierDTO supplierDTO : sup) {
            if (supplierDTO.getCode().equalsIgnoreCase(txtcode.getText())) {
                return false;
            }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplier = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtcode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        tblSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Code", "Name", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSupplierMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSupplier);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Code");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("Name");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel4.setText("Address");

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setText("collaborating");

        jCheckBox1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnAdd.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnAdd.setText("Add new");
        btnAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtcode, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAddress, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 476, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseClicked
        // TODO add your handling code here:
        int pos = tblSupplier.getSelectedRow();
        if (pos >= 0) {
            saveForUpdate = true;
            txtcode.setText((String) tblSupplier.getValueAt(pos, 0));
            txtName.setText((String) tblSupplier.getValueAt(pos, 1));
            txtAddress.setText((String) tblSupplier.getValueAt(pos, 2));

            Vector<SupplierDTO> list1 = SupplierDAO.getSupplier();
            for (int i = 0; i < list1.size(); i++) {
                if (pos == i) {
                    boolean b = list1.get(i).isCollaborating();
                    if (b != false) {
                        jCheckBox1.setSelected(true);
                    } else {
                        jCheckBox1.setSelected(false);
                    }
                }
            }
            txtcode.setEnabled(false);
            txtName.setEnabled(true);
            txtAddress.setEnabled(true);
            jCheckBox1.setEnabled(true);
        }
    }//GEN-LAST:event_tblSupplierMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (saveForUpdate != true || (txtcode.getText().isEmpty() && txtName.getText().isEmpty() && txtAddress.getText().isEmpty())) {
            txtcode.setText("");
            txtName.setText("");
            txtAddress.setText("");
            jCheckBox1.setSelected(true);
            tblSupplier.clearSelection();
            txtcode.setEnabled(true);
            jCheckBox1.setSelected(true);
            txtcode.requestFocus();
            txtcode.setEnabled(true);
            txtName.setEnabled(true);
            txtAddress.setEnabled(true);
            jCheckBox1.setEnabled(true);
            saveForUpdate = false;
        } else {
            if (JOptionPane.showConfirmDialog(null, "do you want to save this") == 0) {
                btnSaveActionPerformed(null);
                txtcode.setText("");
                txtName.setText("");
                txtAddress.setText("");
                jCheckBox1.setSelected(true);
                tblSupplier.clearSelection();
                txtcode.setEnabled(true);
                jCheckBox1.setSelected(true);
                txtcode.requestFocus();
                txtcode.setEnabled(true);
                txtName.setEnabled(true);
                txtAddress.setEnabled(true);
                jCheckBox1.setEnabled(true);
                saveForUpdate = false;
            } else {
                txtcode.setText("");
                txtName.setText("");
                txtAddress.setText("");
                jCheckBox1.setSelected(true);
                tblSupplier.clearSelection();
                txtcode.setEnabled(true);
                jCheckBox1.setSelected(true);
                txtcode.requestFocus();
                txtcode.setEnabled(true);
                txtName.setEnabled(true);
                txtAddress.setEnabled(true);
                jCheckBox1.setEnabled(true);
                saveForUpdate = false;
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try {
            String code = txtcode.getText();
            String name = txtName.getText();
            String address = txtAddress.getText();
            boolean Collaborating;
            if (jCheckBox1.isSelected()) {
                Collaborating = true;
            } else {
                Collaborating = false;
            }
            if (saveForUpdate != true) {
                if (txtcode.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "code is empty");
                } else if (!txtcode.getText().matches("S[0-9][0-9]")) {
                    JOptionPane.showMessageDialog(null, "code is not correct format is (Sxx) with x is a digi");
                } else if (checkCode() == false) {
                    JOptionPane.showMessageDialog(null, "code is exist");
                } else if (txtName.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "name is empty");
                } else if (txtName.getText().indexOf("-") > 0) {
                    JOptionPane.showMessageDialog(null, "name don't have '-' ");
                } else if (txtName.getText().length() > 50) {
                    JOptionPane.showMessageDialog(null, "name is less than 50 character");
                } else if (txtAddress.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "address is empty");
                } else if (txtAddress.getText().length() > 50) {
                    JOptionPane.showMessageDialog(null, "address is less than 50 character");
                } else {
                    if (SupplierDAO.insertSupplier(code, name, address, Collaborating) != 0) {
                        JOptionPane.showMessageDialog(null, "added");
                        saveForUpdate = false;
                        txtcode.setText("");
                        txtName.setText("");
                        txtAddress.setText("");
                        tblSupplier.clearSelection();
                        txtcode.setEnabled(true);
                        jCheckBox1.setSelected(true);
                        txtcode.requestFocus();
                        ennableFalse();
                        ItemPanel.loadsuppler();
                        loadSupplier();
                    }

                }
            } else { // save for update
                if (txtName.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "name is empty");
                } else if (txtName.getText().indexOf("-") > 0) {
                    JOptionPane.showMessageDialog(null, "name don't have '-' ");
                } else if (txtName.getText().length() > 50) {
                    JOptionPane.showMessageDialog(null, "name is less than 50 character");
                } else if (txtAddress.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "address is empty");
                } else if (txtAddress.getText().length() > 50) {
                    JOptionPane.showMessageDialog(null, "address is less than 50 character");
                } else {
                    if (saveForUpdate = true) {
                        if (SupplierDAO.updateSupplier(code, name, address, Collaborating) != 0) {
                            JOptionPane.showMessageDialog(null, "Updated");
                            loadSupplier();
                            saveForUpdate = false;
                            txtcode.setText("");
                            txtName.setText("");
                            txtAddress.setText("");
                            tblSupplier.clearSelection();
                            txtcode.setEnabled(true);
                            jCheckBox1.setSelected(true);
                            txtcode.requestFocus();
                            ennableFalse();
                            ItemPanel.loadsuppler();
                            loadSupplier();
                        }
                    }
                }
            }
        } catch (Exception e) {
            if (e.getMessage().contains("Cannot insert duplicate key")) {
                JOptionPane.showMessageDialog(null, "code bị trùng");
                txtcode.setText("");
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int pos = tblSupplier.getSelectedRow();
        if (pos >= 0 && pos < tblSupplier.getRowCount()) {
            if (checkitem((String) tblSupplier.getValueAt(pos, 0))) {
                JOptionPane.showMessageDialog(null, "Supplier is have item, cann't delete");
            } else {
                if (JOptionPane.showConfirmDialog(null, "do you want to delete this?") == 0) {
                    SupplierDAO.deleteSupplier((String) tblSupplier.getValueAt(pos, 0));
                    JOptionPane.showMessageDialog(null, "Deleted");
                    saveForUpdate = false;
                    loadSupplier();
                    ItemPanel.loadsuppler();
                }
                saveForUpdate = false;
                txtcode.setText("");
                txtName.setText("");
                txtAddress.setText("");
                ennableFalse();
                tblSupplier.clearSelection();
            }
        } else {
            JOptionPane.showMessageDialog(null, "select suplier you want to delete");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable tblSupplier;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtcode;
    // End of variables declaration//GEN-END:variables
}
